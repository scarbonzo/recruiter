// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace recruiter.api.Migrations
{
    [DbContext(typeof(RecruiterMySqlContext))]
    partial class RecruiterMySqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Available");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Notes");

                    b.Property<string>("Phone");

                    b.Property<string>("Salary");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Active");

                    b.Property<DateTime>("Closed");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Notes");

                    b.Property<string>("Project");

                    b.Property<string>("Title");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Active");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("PositionId");

                    b.Property<string>("Text");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Rating", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Notes");

                    b.Property<Guid>("QuestionId");

                    b.Property<Guid?>("ReviewId");

                    b.Property<int>("Score");

                    b.HasKey("Id");

                    b.HasIndex("ReviewId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Callback");

                    b.Property<Guid>("CandidateId");

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("PositionId");

                    b.Property<Guid>("ReviewerId");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Reviewer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Active");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Name");

                    b.Property<DateTime>("Updated");

                    b.HasKey("Id");

                    b.ToTable("Reviewers");
                });

            modelBuilder.Entity("Rating", b =>
                {
                    b.HasOne("Review")
                        .WithMany("Ratings")
                        .HasForeignKey("ReviewId");
                });
#pragma warning restore 612, 618
        }
    }
}
